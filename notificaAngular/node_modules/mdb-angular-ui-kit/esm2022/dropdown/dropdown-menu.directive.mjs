import { Directive, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
// eslint-disable-next-line @angular-eslint/component-class-suffix
export class MdbDropdownMenuDirective {
    elementRef;
    _renderer;
    constructor(elementRef, _renderer) {
        this.elementRef = elementRef;
        this._renderer = _renderer;
    }
    menuPositionClassChanged = new EventEmitter();
    get menuPositionClass() {
        return this._menuPositionClass;
    }
    set menuPositionClass(newClass) {
        const host = this.elementRef.nativeElement;
        const isSameClass = host.classList.contains(newClass);
        if (this._menuPositionClass !== newClass && !isSameClass) {
            const menuPositionClasses = [
                'dropdown-menu-start',
                'dropdown-menu-sm-start',
                'dropdown-menu-md-start',
                'dropdown-menu-lg-start',
                'dropdown-menu-xl-start',
                'dropdown-menu-xxl-start',
                'dropdown-menu-xxl-start',
                'dropdown-menu-xxl-start',
                'dropdown-menu-end',
                'dropdown-menu-sm-end',
                'dropdown-menu-md-end',
                'dropdown-menu-lg-end',
                'dropdown-menu-xl-end',
                'dropdown-menu-xxl-end',
                'dropdown-menu-xxl-end',
                'dropdown-menu-xxl-end',
            ];
            menuPositionClasses.forEach((className) => {
                this._renderer.removeClass(host, className);
            });
            this._renderer.addClass(host, newClass);
            this.menuPositionClassChanged.emit(this.menuPositionClass);
        }
    }
    _menuPositionClass;
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: MdbDropdownMenuDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });
    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.4", type: MdbDropdownMenuDirective, selector: "[mdbDropdownMenu]", inputs: { menuPositionClass: "menuPositionClass" }, outputs: { menuPositionClassChanged: "menuPositionClassChanged" }, exportAs: ["mdbDropdownMenu"], ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: MdbDropdownMenuDirective, decorators: [{
            type: Directive,
            args: [{
                    // eslint-disable-next-line @angular-eslint/directive-selector
                    selector: '[mdbDropdownMenu]',
                    exportAs: 'mdbDropdownMenu',
                }]
        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.Renderer2 }], propDecorators: { menuPositionClassChanged: [{
                type: Output
            }], menuPositionClass: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24tbWVudS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9tZGItYW5ndWxhci11aS1raXQvZHJvcGRvd24vZHJvcGRvd24tbWVudS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBYSxNQUFNLGVBQWUsQ0FBQzs7QUFTOUYsa0VBQWtFO0FBQ2xFLE1BQU0sT0FBTyx3QkFBd0I7SUFDaEI7SUFBZ0M7SUFBbkQsWUFBbUIsVUFBc0IsRUFBVSxTQUFvQjtRQUFwRCxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQVUsY0FBUyxHQUFULFNBQVMsQ0FBVztJQUFHLENBQUM7SUFDakUsd0JBQXdCLEdBQXlCLElBQUksWUFBWSxFQUFVLENBQUM7SUFFdEYsSUFDSSxpQkFBaUI7UUFDbkIsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUM7SUFDakMsQ0FBQztJQUVELElBQUksaUJBQWlCLENBQUMsUUFBZ0I7UUFDcEMsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUM7UUFDM0MsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdEQsSUFBSSxJQUFJLENBQUMsa0JBQWtCLEtBQUssUUFBUSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDekQsTUFBTSxtQkFBbUIsR0FBRztnQkFDMUIscUJBQXFCO2dCQUNyQix3QkFBd0I7Z0JBQ3hCLHdCQUF3QjtnQkFDeEIsd0JBQXdCO2dCQUN4Qix3QkFBd0I7Z0JBQ3hCLHlCQUF5QjtnQkFDekIseUJBQXlCO2dCQUN6Qix5QkFBeUI7Z0JBQ3pCLG1CQUFtQjtnQkFDbkIsc0JBQXNCO2dCQUN0QixzQkFBc0I7Z0JBQ3RCLHNCQUFzQjtnQkFDdEIsc0JBQXNCO2dCQUN0Qix1QkFBdUI7Z0JBQ3ZCLHVCQUF1QjtnQkFDdkIsdUJBQXVCO2FBQ3hCLENBQUM7WUFFRixtQkFBbUIsQ0FBQyxPQUFPLENBQUMsQ0FBQyxTQUFTLEVBQUUsRUFBRTtnQkFDeEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1lBQzlDLENBQUMsQ0FBQyxDQUFDO1lBQ0gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1lBRXhDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDN0QsQ0FBQztJQUNILENBQUM7SUFDTyxrQkFBa0IsQ0FBUzt1R0F4Q3hCLHdCQUF3QjsyRkFBeEIsd0JBQXdCOzsyRkFBeEIsd0JBQXdCO2tCQU5wQyxTQUFTO21CQUFDO29CQUNULDhEQUE4RDtvQkFDOUQsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsUUFBUSxFQUFFLGlCQUFpQjtpQkFDNUI7dUdBSVcsd0JBQXdCO3NCQUFqQyxNQUFNO2dCQUdILGlCQUFpQjtzQkFEcEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IHR5cGUgTWRiRHJvcGRvd25NZW51UG9zaXRpb25DbGFzcyA9ICdkcm9wZG93bi1tZW51LWVuZCc7XG5cbkBEaXJlY3RpdmUoe1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQGFuZ3VsYXItZXNsaW50L2RpcmVjdGl2ZS1zZWxlY3RvclxuICBzZWxlY3RvcjogJ1ttZGJEcm9wZG93bk1lbnVdJyxcbiAgZXhwb3J0QXM6ICdtZGJEcm9wZG93bk1lbnUnLFxufSlcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvY29tcG9uZW50LWNsYXNzLXN1ZmZpeFxuZXhwb3J0IGNsYXNzIE1kYkRyb3Bkb3duTWVudURpcmVjdGl2ZSB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwcml2YXRlIF9yZW5kZXJlcjogUmVuZGVyZXIyKSB7fVxuICBAT3V0cHV0KCkgbWVudVBvc2l0aW9uQ2xhc3NDaGFuZ2VkOiBFdmVudEVtaXR0ZXI8c3RyaW5nPiA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuXG4gIEBJbnB1dCgpXG4gIGdldCBtZW51UG9zaXRpb25DbGFzcygpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9tZW51UG9zaXRpb25DbGFzcztcbiAgfVxuXG4gIHNldCBtZW51UG9zaXRpb25DbGFzcyhuZXdDbGFzczogc3RyaW5nKSB7XG4gICAgY29uc3QgaG9zdCA9IHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICAgIGNvbnN0IGlzU2FtZUNsYXNzID0gaG9zdC5jbGFzc0xpc3QuY29udGFpbnMobmV3Q2xhc3MpO1xuICAgIGlmICh0aGlzLl9tZW51UG9zaXRpb25DbGFzcyAhPT0gbmV3Q2xhc3MgJiYgIWlzU2FtZUNsYXNzKSB7XG4gICAgICBjb25zdCBtZW51UG9zaXRpb25DbGFzc2VzID0gW1xuICAgICAgICAnZHJvcGRvd24tbWVudS1zdGFydCcsXG4gICAgICAgICdkcm9wZG93bi1tZW51LXNtLXN0YXJ0JyxcbiAgICAgICAgJ2Ryb3Bkb3duLW1lbnUtbWQtc3RhcnQnLFxuICAgICAgICAnZHJvcGRvd24tbWVudS1sZy1zdGFydCcsXG4gICAgICAgICdkcm9wZG93bi1tZW51LXhsLXN0YXJ0JyxcbiAgICAgICAgJ2Ryb3Bkb3duLW1lbnUteHhsLXN0YXJ0JyxcbiAgICAgICAgJ2Ryb3Bkb3duLW1lbnUteHhsLXN0YXJ0JyxcbiAgICAgICAgJ2Ryb3Bkb3duLW1lbnUteHhsLXN0YXJ0JyxcbiAgICAgICAgJ2Ryb3Bkb3duLW1lbnUtZW5kJyxcbiAgICAgICAgJ2Ryb3Bkb3duLW1lbnUtc20tZW5kJyxcbiAgICAgICAgJ2Ryb3Bkb3duLW1lbnUtbWQtZW5kJyxcbiAgICAgICAgJ2Ryb3Bkb3duLW1lbnUtbGctZW5kJyxcbiAgICAgICAgJ2Ryb3Bkb3duLW1lbnUteGwtZW5kJyxcbiAgICAgICAgJ2Ryb3Bkb3duLW1lbnUteHhsLWVuZCcsXG4gICAgICAgICdkcm9wZG93bi1tZW51LXh4bC1lbmQnLFxuICAgICAgICAnZHJvcGRvd24tbWVudS14eGwtZW5kJyxcbiAgICAgIF07XG5cbiAgICAgIG1lbnVQb3NpdGlvbkNsYXNzZXMuZm9yRWFjaCgoY2xhc3NOYW1lKSA9PiB7XG4gICAgICAgIHRoaXMuX3JlbmRlcmVyLnJlbW92ZUNsYXNzKGhvc3QsIGNsYXNzTmFtZSk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuX3JlbmRlcmVyLmFkZENsYXNzKGhvc3QsIG5ld0NsYXNzKTtcblxuICAgICAgdGhpcy5tZW51UG9zaXRpb25DbGFzc0NoYW5nZWQuZW1pdCh0aGlzLm1lbnVQb3NpdGlvbkNsYXNzKTtcbiAgICB9XG4gIH1cbiAgcHJpdmF0ZSBfbWVudVBvc2l0aW9uQ2xhc3M6IHN0cmluZztcbn1cbiJdfQ==