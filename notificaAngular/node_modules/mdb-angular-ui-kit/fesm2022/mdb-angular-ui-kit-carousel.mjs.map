{"version":3,"file":"mdb-angular-ui-kit-carousel.mjs","sources":["../../../projects/mdb-angular-ui-kit/carousel/carousel-item.component.ts","../../../projects/mdb-angular-ui-kit/carousel/carousel.component.ts","../../../projects/mdb-angular-ui-kit/carousel/carousel.component.html","../../../projects/mdb-angular-ui-kit/carousel/carousel.module.ts","../../../projects/mdb-angular-ui-kit/carousel/mdb-angular-ui-kit-carousel.ts"],"sourcesContent":["import { Component, ElementRef, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'mdb-carousel-item',\n  template: '<ng-content></ng-content>',\n})\nexport class MdbCarouselItemComponent {\n  @Input() interval: number | null = null;\n\n  @HostBinding('class.carousel-item')\n  carouselItem = true;\n\n  @HostBinding('class.active') active = false;\n\n  @HostBinding('class.carousel-item-next') next = false;\n  @HostBinding('class.carousel-item-prev') prev = false;\n  @HostBinding('class.carousel-item-start') start = false;\n  @HostBinding('class.carousel-item-end') end = false;\n\n  get host(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  constructor(private _elementRef: ElementRef) {}\n}\n","import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { MdbCarouselItemComponent } from './carousel-item.component';\n\nexport enum Direction {\n  UNKNOWN,\n  NEXT,\n  PREV,\n}\n\n@Component({\n  selector: 'mdb-carousel',\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MdbCarouselComponent implements AfterViewInit, OnDestroy {\n  @ContentChildren(MdbCarouselItemComponent) _items: QueryList<MdbCarouselItemComponent>;\n  get items(): MdbCarouselItemComponent[] {\n    return this._items && this._items.toArray();\n  }\n\n  @Input() animation: 'slide' | 'fade' = 'slide';\n\n  @Input()\n  get controls(): boolean {\n    return this._controls;\n  }\n  set controls(value: boolean) {\n    this._controls = coerceBooleanProperty(value);\n  }\n  private _controls = false;\n\n  @Input()\n  get dark(): boolean {\n    return this._dark;\n  }\n  set dark(value: boolean) {\n    this._dark = coerceBooleanProperty(value);\n  }\n  private _dark = false;\n\n  @Input()\n  get indicators(): boolean {\n    return this._indicators;\n  }\n  set indicators(value: boolean) {\n    this._indicators = coerceBooleanProperty(value);\n  }\n  private _indicators = false;\n\n  @Input()\n  get ride(): boolean {\n    return this._ride;\n  }\n  set ride(value: boolean) {\n    this._ride = coerceBooleanProperty(value);\n  }\n  private _ride = true;\n\n  @Input()\n  get interval(): number {\n    return this._interval;\n  }\n  set interval(value: number) {\n    this._interval = value;\n\n    if (this.items) {\n      this._restartInterval();\n    }\n  }\n  private _interval = 5000;\n\n  @Input() keyboard = true;\n  @Input() pause = true;\n  @Input() wrap = true;\n\n  @Output() slide: EventEmitter<void> = new EventEmitter();\n  @Output() slideChange: EventEmitter<void> = new EventEmitter();\n\n  get activeSlide(): number {\n    return this._activeSlide;\n  }\n\n  set activeSlide(index: number) {\n    if (this.items.length && this._activeSlide !== index) {\n      this._activeSlide = index;\n      this._restartInterval();\n    }\n  }\n  private _activeSlide = 0;\n\n  private _lastInterval: any;\n  private _isPlaying = false;\n  private _isSliding = false;\n\n  private readonly _destroy$: Subject<void> = new Subject<void>();\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    if (this.pause && this._isPlaying) {\n      this.stop();\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    if (this.pause && !this._isPlaying) {\n      this.play();\n    }\n  }\n\n  @HostBinding('class.d-block') display = true;\n\n  constructor(private _elementRef: ElementRef, private _cdRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    Promise.resolve().then(() => {\n      this._setActiveSlide(this._activeSlide);\n\n      if (this.interval > 0 && this.ride) {\n        this.play();\n      }\n      this._cdRef.markForCheck();\n    });\n\n    if (this.keyboard) {\n      fromEvent(this._elementRef.nativeElement, 'keydown')\n        .pipe(takeUntil(this._destroy$))\n        .subscribe((event: KeyboardEvent) => {\n          if (event.key === 'ArrowRight') {\n            this.next();\n          } else if (event.key === 'ArrowLeft') {\n            this.prev();\n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  private _setActiveSlide(index: number): void {\n    const currentSlide = this.items[this._activeSlide];\n    currentSlide.active = false;\n\n    const newSlide = this.items[index];\n    newSlide.active = true;\n    this._activeSlide = index;\n  }\n\n  private _restartInterval(): void {\n    this._resetInterval();\n    const activeElement = this.items[this.activeSlide];\n    const interval = activeElement.interval ? activeElement.interval : this.interval;\n\n    if (!isNaN(interval) && interval > 0) {\n      this._lastInterval = setInterval(() => {\n        const nInterval = +interval;\n        if (this._isPlaying && !isNaN(nInterval) && nInterval > 0) {\n          this.next();\n          this._cdRef.markForCheck();\n        } else {\n          this.stop();\n        }\n      }, interval);\n    }\n  }\n\n  private _resetInterval(): void {\n    if (this._lastInterval) {\n      clearInterval(this._lastInterval);\n      this._lastInterval = null;\n    }\n  }\n\n  play(): void {\n    if (!this._isPlaying) {\n      this._isPlaying = true;\n      this._restartInterval();\n    }\n  }\n\n  stop(): void {\n    if (this._isPlaying) {\n      this._isPlaying = false;\n      this._resetInterval();\n    }\n  }\n\n  to(index: number): void {\n    if (index > this.items.length - 1 || index < 0) {\n      return;\n    }\n\n    if (this.activeSlide === index) {\n      this.stop();\n      this.play();\n      return;\n    }\n\n    const direction = index > this.activeSlide ? Direction.NEXT : Direction.PREV;\n\n    this._animateSlides(direction, this.activeSlide, index);\n    this.activeSlide = index;\n  }\n\n  next(): void {\n    if (!this._isSliding) {\n      this._slide(Direction.NEXT);\n    }\n  }\n\n  prev(): void {\n    if (!this._isSliding) {\n      this._slide(Direction.PREV);\n    }\n  }\n\n  private _slide(direction: Direction): void {\n    const isFirst = this._activeSlide === 0;\n    const isLast = this._activeSlide === this.items.length - 1;\n\n    if (!this.wrap) {\n      if ((direction === Direction.NEXT && isLast) || (direction === Direction.PREV && isFirst)) {\n        return;\n      }\n    }\n\n    const newSlideIndex = this._getNewSlideIndex(direction);\n\n    this._animateSlides(direction, this.activeSlide, newSlideIndex);\n    this.activeSlide = newSlideIndex;\n\n    this.slide.emit();\n  }\n\n  private _animateSlides(direction: Direction, currentIndex: number, nextIndex: number): void {\n    const currentItem = this.items[currentIndex];\n    const nextItem = this.items[nextIndex];\n    const currentEl = currentItem.host;\n    const nextEl = nextItem.host;\n\n    this._isSliding = true;\n\n    if (this._isPlaying) {\n      this.stop();\n    }\n\n    if (direction === Direction.NEXT) {\n      nextItem.next = true;\n\n      setTimeout(() => {\n        this._reflow(nextEl);\n        currentItem.start = true;\n        nextItem.start = true;\n        this._cdRef.markForCheck();\n      }, 0);\n\n      const transitionDuration = 600;\n\n      fromEvent(currentEl, 'transitionend')\n        .pipe(take(1))\n        .subscribe(() => {\n          nextItem.next = false;\n          nextItem.start = false;\n          nextItem.active = true;\n\n          currentItem.active = false;\n          currentItem.start = false;\n          currentItem.next = false;\n\n          this.slideChange.emit();\n          this._isSliding = false;\n        });\n\n      this._emulateTransitionEnd(currentEl, transitionDuration);\n    } else if (direction === Direction.PREV) {\n      nextItem.prev = true;\n\n      setTimeout(() => {\n        this._reflow(nextEl);\n        currentItem.end = true;\n        nextItem.end = true;\n        this._cdRef.markForCheck();\n      }, 0);\n\n      const transitionDuration = 600;\n\n      fromEvent(currentEl, 'transitionend')\n        .pipe(take(1))\n        .subscribe(() => {\n          nextItem.prev = false;\n          nextItem.end = false;\n          nextItem.active = true;\n\n          currentItem.active = false;\n          currentItem.end = false;\n          currentItem.prev = false;\n\n          this.slideChange.emit();\n          this._isSliding = false;\n        });\n\n      this._emulateTransitionEnd(currentEl, transitionDuration);\n    }\n\n    if (!this._isPlaying && this.interval > 0) {\n      this.play();\n    }\n  }\n\n  private _reflow(element: HTMLElement): number {\n    return element.offsetHeight;\n  }\n\n  private _emulateTransitionEnd(element: HTMLElement, duration: number): void {\n    let eventEmitted = false;\n    const durationPadding = 5;\n    const emulatedDuration = duration + durationPadding;\n\n    fromEvent(element, 'transitionend')\n      .pipe(take(1))\n      .subscribe(() => {\n        eventEmitted = true;\n      });\n\n    setTimeout(() => {\n      if (!eventEmitted) {\n        element.dispatchEvent(new Event('transitionend'));\n      }\n    }, emulatedDuration);\n  }\n\n  private _getNewSlideIndex(direction: Direction): number {\n    let newSlideIndex: number;\n\n    if (direction === Direction.NEXT) {\n      newSlideIndex = this._getNextSlideIndex();\n    }\n\n    if (direction === Direction.PREV) {\n      newSlideIndex = this._getPrevSlideIndex();\n    }\n\n    return newSlideIndex;\n  }\n\n  private _getNextSlideIndex(): number {\n    const isLast = this._activeSlide === this.items.length - 1;\n\n    if (!isLast) {\n      return this._activeSlide + 1;\n    } else if (this.wrap && isLast) {\n      return 0;\n    } else {\n      return this._activeSlide;\n    }\n  }\n\n  private _getPrevSlideIndex(): number {\n    const isFirst = this._activeSlide === 0;\n\n    if (!isFirst) {\n      return this._activeSlide - 1;\n    } else if (this.wrap && isFirst) {\n      return this.items.length - 1;\n    } else {\n      return this._activeSlide;\n    }\n  }\n\n  static ngAcceptInputType_controls: BooleanInput;\n  static ngAcceptInputType_dark: BooleanInput;\n  static ngAcceptInputType_indicators: BooleanInput;\n  static ngAcceptInputType_ride: BooleanInput;\n}\n","<div\n  class=\"carousel slide\"\n  [class.carousel-fade]=\"animation === 'fade'\"\n  [class.carousel-dark]=\"dark\"\n>\n  <div class=\"carousel-indicators\" *ngIf=\"indicators\">\n    <button\n      *ngFor=\"let item of items; let i = index\"\n      type=\"button\"\n      [class.active]=\"i === activeSlide\"\n      [attr.aria-current]=\"i === activeSlide\"\n      (click)=\"to(i)\"\n    ></button>\n  </div>\n\n  <div class=\"carousel-inner\">\n    <ng-content></ng-content>\n  </div>\n\n  <button *ngIf=\"controls\" class=\"carousel-control-prev\" type=\"button\" (click)=\"prev()\">\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n    <span class=\"visually-hidden\">Previous</span>\n  </button>\n  <button *ngIf=\"controls\" class=\"carousel-control-next\" type=\"button\" (click)=\"next()\">\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n    <span class=\"visually-hidden\">Next</span>\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MdbCarouselComponent } from './carousel.component';\nimport { MdbCarouselItemComponent } from './carousel-item.component';\n\n@NgModule({\n  declarations: [MdbCarouselComponent, MdbCarouselItemComponent],\n  exports: [MdbCarouselComponent, MdbCarouselItemComponent],\n  imports: [CommonModule],\n})\nexport class MdbCarouselModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}