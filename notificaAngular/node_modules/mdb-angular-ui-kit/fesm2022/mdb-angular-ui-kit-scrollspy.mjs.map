{"version":3,"file":"mdb-angular-ui-kit-scrollspy.mjs","sources":["../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-link.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.service.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-element.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy-window.directive.ts","../../../projects/mdb-angular-ui-kit/scrollspy/scrollspy.module.ts","../../../projects/mdb-angular-ui-kit/scrollspy/mdb-angular-ui-kit-scrollspy.ts"],"sourcesContent":["import {\n  Directive,\n  OnInit,\n  Input,\n  HostListener,\n  HostBinding,\n  ChangeDetectorRef,\n  Inject,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyLink]',\n})\nexport class MdbScrollspyLinkDirective implements OnInit {\n  @Input()\n  get scrollIntoView(): boolean {\n    return this._scrollIntoView;\n  }\n  set scrollIntoView(value: boolean) {\n    this._scrollIntoView = value;\n  }\n  private _scrollIntoView = true;\n\n  get section(): HTMLElement {\n    return this._section;\n  }\n  set section(value: HTMLElement) {\n    if (value) {\n      this._section = value;\n    }\n  }\n  private _section: HTMLElement;\n  private _id: string;\n\n  constructor(private cdRef: ChangeDetectorRef, @Inject(DOCUMENT) private document: any) {}\n\n  @Input('mdbScrollspyLink')\n  get id(): string {\n    return this._id;\n  }\n  set id(newId: string) {\n    if (newId) {\n      this._id = newId;\n    }\n  }\n\n  @HostBinding('class.scrollspy-link')\n  scrollspyLink = true;\n\n  @HostBinding('class.active')\n  active = false;\n\n  @HostListener('click', [])\n  onClick(): void {\n    if (this.section && this.scrollIntoView === true) {\n      this.section.scrollIntoView();\n    }\n  }\n\n  detectChanges(): void {\n    this.cdRef.detectChanges();\n  }\n\n  assignSectionToId(): void {\n    this.section = this.document.documentElement.querySelector(`#${this.id}`);\n  }\n\n  ngOnInit(): void {\n    this.assignSectionToId();\n  }\n}\n","import { Injectable, QueryList } from '@angular/core';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { Subject, Observable } from 'rxjs';\n\nexport interface MdbScrollspy {\n  id: string;\n  links: QueryList<MdbScrollspyLinkDirective>;\n}\n\n@Injectable()\nexport class MdbScrollspyService {\n  scrollSpys: MdbScrollspy[] = [];\n\n  private activeSubject = new Subject<MdbScrollspyLinkDirective>();\n  active$: Observable<any> = this.activeSubject;\n\n  addScrollspy(scrollSpy: MdbScrollspy): void {\n    this.scrollSpys.push(scrollSpy);\n  }\n\n  removeScrollspy(scrollSpyId: string): void {\n    const scrollSpyIndex = this.scrollSpys.findIndex((spy) => {\n      return spy.id === scrollSpyId;\n    });\n    this.scrollSpys.splice(scrollSpyIndex, 1);\n  }\n\n  updateActiveState(scrollSpyId: string, activeLinkId: string): void {\n    const scrollSpy = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    const activeLink = scrollSpy.links.find((link) => {\n      return link.id === activeLinkId;\n    });\n\n    this.setActiveLink(activeLink);\n  }\n\n  removeActiveState(scrollSpyId: string, activeLinkId: string): void {\n    const scrollSpy = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    const activeLink = scrollSpy.links.find((link) => {\n      return link.id === activeLinkId;\n    });\n\n    if (!activeLink) {\n      return;\n    }\n\n    activeLink.active = false;\n    activeLink.detectChanges();\n  }\n\n  setActiveLink(activeLink: MdbScrollspyLinkDirective | any): void {\n    if (activeLink) {\n      activeLink.active = true;\n      activeLink.detectChanges();\n      this.activeSubject.next(activeLink);\n    }\n  }\n\n  removeActiveLinks(scrollSpyId: string): void {\n    const scrollSpy: MdbScrollspy | undefined = this.scrollSpys.find((spy) => {\n      return spy.id === scrollSpyId;\n    });\n\n    if (!scrollSpy) {\n      return;\n    }\n\n    scrollSpy.links.forEach((link) => {\n      link.active = false;\n      link.detectChanges();\n    });\n  }\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { MdbScrollspyService } from './scrollspy.service';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[mdbScrollspy]',\n  template: '<ng-content></ng-content>',\n})\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nexport class MdbScrollspyDirective implements OnInit, AfterContentInit, OnDestroy {\n  @ContentChildren(MdbScrollspyLinkDirective, { descendants: true })\n  links: QueryList<MdbScrollspyLinkDirective>;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n\n  @Input('mdbScrollspy')\n  get id(): string {\n    return this._id;\n  }\n\n  set id(newId: string) {\n    if (newId) {\n      this._id = newId;\n    }\n  }\n\n  private _id: string;\n\n  @Input()\n  get collapsible(): boolean {\n    return this._collapsible;\n  }\n  set collapsible(value: boolean) {\n    this._collapsible = coerceBooleanProperty(value);\n  }\n\n  private _collapsible = false;\n\n  private _isBrowser: boolean;\n\n  @Output() activeLinkChange: EventEmitter<any> = new EventEmitter<any>();\n\n  activeSub: Subscription;\n\n  constructor(\n    private scrollSpyService: MdbScrollspyService,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    this._isBrowser = isPlatformBrowser(platformId);\n  }\n\n  get host(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  collapsibleElementHeight = 0;\n\n  ngOnInit(): void {\n    if (this._isBrowser) {\n      this.collapsibleElementHeight = this.host.getBoundingClientRect().height;\n    }\n\n    this.activeSub = this.scrollSpyService.active$\n      .pipe(takeUntil(this._destroy$), distinctUntilChanged())\n      .subscribe((activeLink) => {\n        this.activeLinkChange.emit(activeLink);\n        if (this.collapsible) {\n          this.styleCollapsibleElement();\n        }\n      });\n  }\n\n  ngAfterContentInit(): void {\n    this.scrollSpyService.addScrollspy({ id: this.id, links: this.links });\n  }\n\n  ngOnDestroy(): void {\n    this.scrollSpyService.removeScrollspy(this.id);\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  private styleCollapsibleElement(): void {\n    this._renderer.setStyle(this.host, 'overflow', 'hidden');\n    this._renderer.setStyle(this.host, 'transition', 'height 0.2s ease-in-out');\n    this._renderer.setStyle(this.host, 'flex-wrap', 'nowrap');\n\n    const hostSiblings = this.getAllSiblings(this.host);\n    const isAnySiblingActive = hostSiblings.some((element) => {\n      return element.classList.contains('active');\n    });\n\n    if (this.collapsible && isAnySiblingActive) {\n      this._renderer.setStyle(this.host, 'height', `${this.collapsibleElementHeight}px`);\n    } else if (this.collapsible && !isAnySiblingActive) {\n      this._renderer.setStyle(this.host, 'height', '0px');\n    }\n  }\n\n  private getAllSiblings(element: HTMLElement) {\n    let siblings = [];\n    if (!element.parentNode) {\n      return siblings;\n    }\n    let sibling = element.parentNode.firstElementChild;\n    do {\n      if (sibling != element) {\n        siblings.push(sibling);\n      }\n    } while ((sibling = sibling.nextElementSibling));\n    return siblings;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Renderer2,\n  NgZone,\n  Input,\n  AfterViewInit,\n  Inject,\n} from '@angular/core';\nimport { MdbScrollspyService } from './scrollspy.service';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyElement]',\n})\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport class MdbScrollspyElementDirective implements OnInit, AfterViewInit {\n  private id: string;\n\n  get host(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  @Input() container: HTMLElement;\n\n  @Input('mdbScrollspyElement')\n  get scrollSpyId(): string {\n    return this._scrollSpyId;\n  }\n  set scrollSpyId(newId: string) {\n    if (newId) {\n      this._scrollSpyId = newId;\n    }\n  }\n  private _scrollSpyId: string;\n\n  @Input() offset = 0;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private scrollSpyService: MdbScrollspyService,\n    @Inject(DOCUMENT) private _document: any\n  ) {}\n\n  isElementInViewport(): boolean {\n    const scrollTop = this.container.scrollTop;\n    const elTop = this.host.offsetTop - this.offset;\n    const elHeight = this.host.offsetHeight;\n\n    return scrollTop >= elTop && scrollTop < elTop + elHeight;\n  }\n\n  updateActiveState(scrollSpyId: string, id: string): void {\n    if (this.isElementInViewport()) {\n      this.scrollSpyService.removeActiveLinks(scrollSpyId);\n      this.scrollSpyService.updateActiveState(scrollSpyId, id);\n    }\n  }\n\n  onScroll(): void {\n    this.updateActiveState(this.scrollSpyId, this.id);\n  }\n\n  listenToScroll(): void {\n    this.renderer.listen(this.container, 'scroll', () => {\n      this.onScroll();\n    });\n  }\n\n  ngOnInit(): void {\n    this.id = this.host.id;\n\n    if (!this.container) {\n      this.container = this._getClosestEl(this.host, '.scrollspy-container');\n    }\n\n    this.renderer.setStyle(this.container, 'position', 'relative');\n\n    this.ngZone.runOutsideAngular(this.listenToScroll.bind(this));\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.updateActiveState(this.scrollSpyId, this.id);\n    }, 0);\n  }\n\n  private _getClosestEl(el: any, selector: string): HTMLElement | null {\n    for (; el && el !== this._document; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n    return null;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  OnInit,\n  Inject,\n  Renderer2,\n  NgZone,\n  Input,\n  AfterViewInit,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { MdbScrollspyService } from './scrollspy.service';\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbScrollspyWindow]',\n})\nexport class MdbScrollspyWindowDirective implements OnInit, AfterViewInit {\n  private id: string;\n\n  @Input('mdbScrollspyWindow')\n  get scrollSpyId(): string {\n    return this._scrollSpyId;\n  }\n  set scrollSpyId(newId: string) {\n    if (newId) {\n      this._scrollSpyId = newId;\n    }\n  }\n  private _scrollSpyId: string;\n\n  @Input() offset = 0;\n\n  constructor(\n    @Inject(DOCUMENT) private document: any,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private scrollSpyService: MdbScrollspyService\n  ) {}\n\n  isElementInViewport(): boolean {\n    const scrollTop = this.document.documentElement.scrollTop || this.document.body.scrollTop;\n    const elHeight = this.el.nativeElement.offsetHeight;\n    const elTop = this.el.nativeElement.offsetTop - this.offset;\n    const elBottom = elTop + elHeight;\n\n    return scrollTop >= elTop && scrollTop <= elBottom;\n  }\n\n  updateActiveState(scrollSpyId: string, id: string): void {\n    if (this.isElementInViewport()) {\n      this.scrollSpyService.updateActiveState(scrollSpyId, id);\n    } else {\n      this.scrollSpyService.removeActiveState(scrollSpyId, id);\n    }\n  }\n\n  onScroll(): void {\n    this.updateActiveState(this.scrollSpyId, this.id);\n  }\n\n  listenToScroll(): void {\n    this.renderer.listen(window, 'scroll', () => {\n      this.onScroll();\n    });\n  }\n\n  ngOnInit(): void {\n    this.id = this.el.nativeElement.id;\n\n    this.ngZone.runOutsideAngular(this.listenToScroll.bind(this));\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.updateActiveState(this.scrollSpyId, this.id);\n    }, 0);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MdbScrollspyDirective } from './scrollspy.directive';\nimport { MdbScrollspyLinkDirective } from './scrollspy-link.directive';\nimport { MdbScrollspyElementDirective } from './scrollspy-element.directive';\nimport { MdbScrollspyService } from './scrollspy.service';\nimport { MdbScrollspyWindowDirective } from './scrollspy-window.directive';\n\n@NgModule({\n  declarations: [\n    MdbScrollspyDirective,\n    MdbScrollspyLinkDirective,\n    MdbScrollspyElementDirective,\n    MdbScrollspyWindowDirective,\n  ],\n  exports: [\n    MdbScrollspyDirective,\n    MdbScrollspyLinkDirective,\n    MdbScrollspyElementDirective,\n    MdbScrollspyWindowDirective,\n  ],\n  providers: [MdbScrollspyService],\n})\nexport class MdbScrollspyModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.MdbScrollspyService"],"mappings":"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"}