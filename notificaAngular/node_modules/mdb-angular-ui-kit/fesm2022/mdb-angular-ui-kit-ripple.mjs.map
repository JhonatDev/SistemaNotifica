{"version":3,"file":"mdb-angular-ui-kit-ripple.mjs","sources":["../../../projects/mdb-angular-ui-kit/ripple/ripple-utils.ts","../../../projects/mdb-angular-ui-kit/ripple/ripple.directive.ts","../../../projects/mdb-angular-ui-kit/ripple/ripple.module.ts","../../../projects/mdb-angular-ui-kit/ripple/mdb-angular-ui-kit-ripple.ts"],"sourcesContent":["const DEFAULT_RIPPLE_COLOR = [0, 0, 0];\n\nexport function durationToMsNumber(time: string): number {\n  return Number(time.replace('ms', '').replace('s', '000'));\n}\n\nexport function colorToRGB(color: any): number[] {\n  // eslint-disable-next-line no-shadow,@typescript-eslint/no-shadow\n  function hexToRgb(color: any): any {\n    const HEX_COLOR_LENGTH = 7;\n    const IS_SHORT_HEX = color.length < HEX_COLOR_LENGTH;\n    if (IS_SHORT_HEX) {\n      color = `#${color[1]}${color[1]}${color[2]}${color[2]}${color[3]}${color[3]}`;\n    }\n    return [\n      parseInt(color.substr(1, 2), 16),\n      parseInt(color.substr(3, 2), 16),\n      parseInt(color.substr(5, 2), 16),\n    ];\n  }\n\n  // eslint-disable-next-line no-shadow,@typescript-eslint/no-shadow\n  function namedColorsToRgba(color: any): any {\n    const tempElem = document.body.appendChild(document.createElement('fictum'));\n    const flag = 'rgb(1, 2, 3)';\n    tempElem.style.color = flag;\n    if (tempElem.style.color !== flag) {\n      return DEFAULT_RIPPLE_COLOR;\n    }\n    tempElem.style.color = color;\n    if (tempElem.style.color === flag || tempElem.style.color === '') {\n      return DEFAULT_RIPPLE_COLOR;\n    } // color parse failed\n    color = getComputedStyle(tempElem).color;\n    document.body.removeChild(tempElem);\n    return color;\n  }\n\n  // eslint-disable-next-line no-shadow, @typescript-eslint/no-shadow\n  function rgbaToRgb(color: any): any {\n    color = color.match(/[.\\d]+/g).map((a) => +Number(a));\n    color.length = 3;\n    return color;\n  }\n\n  if (color.toLowerCase() === 'transparent') {\n    return DEFAULT_RIPPLE_COLOR;\n  }\n  if (color[0] === '#') {\n    return hexToRgb(color);\n  }\n  if (color.indexOf('rgb') === -1) {\n    color = namedColorsToRgba(color);\n  }\n  if (color.indexOf('rgb') === 0) {\n    return rgbaToRgb(color);\n  }\n\n  return DEFAULT_RIPPLE_COLOR;\n}\n\nexport function getDiameter({\n  offsetX,\n  offsetY,\n  height,\n  width,\n}: {\n  [key: string]: number;\n}): number {\n  const top = offsetY <= height / 2;\n  const left = offsetX <= width / 2;\n  const pythagorean = (sideA: number, sideB: number) => Math.sqrt(sideA ** 2 + sideB ** 2);\n\n  const positionCenter = offsetY === height / 2 && offsetX === width / 2;\n  // mouse position on the quadrants of the coordinate system\n  const quadrant = {\n    first: top === true && left === false,\n    second: top === true && left === true,\n    third: top === false && left === true,\n    fourth: top === false && left === false,\n  };\n\n  const getCorner = {\n    topLeft: pythagorean(offsetX, offsetY),\n    topRight: pythagorean(width - offsetX, offsetY),\n    bottomLeft: pythagorean(offsetX, height - offsetY),\n    bottomRight: pythagorean(width - offsetX, height - offsetY),\n  };\n\n  let diameter = 0;\n\n  if (positionCenter || quadrant.fourth) {\n    diameter = getCorner.topLeft;\n  } else if (quadrant.third) {\n    diameter = getCorner.topRight;\n  } else if (quadrant.second) {\n    diameter = getCorner.bottomRight;\n  } else if (quadrant.first) {\n    diameter = getCorner.bottomLeft;\n  }\n\n  return diameter * 2;\n}\n","import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directive, ElementRef, HostBinding, HostListener, Input, Renderer2 } from '@angular/core';\nimport { colorToRGB, durationToMsNumber, getDiameter } from './ripple-utils';\n\nconst TRANSITION_BREAK_OPACITY = 0.5;\n\nconst GRADIENT =\n  'rgba({{color}}, 0.2) 0, rgba({{color}}, 0.3) 40%, rgba({{color}}, 0.4) 50%, rgba({{color}}, 0.5) 60%, rgba({{color}}, 0) 70%';\nconst BOOTSTRAP_COLORS = [\n  'primary',\n  'secondary',\n  'success',\n  'danger',\n  'warning',\n  'info',\n  'light',\n  'dark',\n];\n\n@Directive({\n  // eslint-disable-next-line @angular-eslint/directive-selector\n  selector: '[mdbRipple]',\n  exportAs: 'mdbRipple',\n})\nexport class MdbRippleDirective {\n  @Input()\n  get rippleCentered(): boolean {\n    return this._rippleCentered;\n  }\n  set rippleCentered(value: boolean) {\n    this._rippleCentered = coerceBooleanProperty(value);\n  }\n  private _rippleCentered = false;\n\n  @Input() rippleColor = '';\n  @Input() rippleDuration = '500ms';\n  @Input() rippleRadius = 0;\n\n  @Input()\n  get rippleUnbound(): boolean {\n    return this._rippleUnbound;\n  }\n  set rippleUnbound(value: boolean) {\n    this._rippleUnbound = coerceBooleanProperty(value);\n  }\n  private _rippleUnbound = false;\n\n  private _rippleInSpan = false;\n\n  private _rippleTimer = null;\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {}\n\n  get host(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  @HostBinding('class.ripple-surface') ripple = true;\n\n  @HostListener('click', ['$event'])\n  _createRipple(event: any): void {\n    const { layerX, layerY } = event;\n    const offsetX = layerX;\n    const offsetY = layerY;\n    const height = this.host.offsetHeight;\n    const width = this.host.offsetWidth;\n    const duration = durationToMsNumber(this.rippleDuration);\n    const diameterOptions = {\n      offsetX: this.rippleCentered ? height / 2 : offsetX,\n      offsetY: this.rippleCentered ? width / 2 : offsetY,\n      height,\n      width,\n    };\n    const diameter = getDiameter(diameterOptions);\n    const radiusValue = this.rippleRadius || diameter / 2;\n\n    const opacity = {\n      delay: duration * TRANSITION_BREAK_OPACITY,\n      duration: duration - duration * TRANSITION_BREAK_OPACITY,\n    };\n\n    const styles = {\n      left: this.rippleCentered ? `${width / 2 - radiusValue}px` : `${offsetX - radiusValue}px`,\n      top: this.rippleCentered ? `${height / 2 - radiusValue}px` : `${offsetY - radiusValue}px`,\n      height: `${this.rippleRadius * 2 || diameter}px`,\n      width: `${this.rippleRadius * 2 || diameter}px`,\n      transitionDelay: `0s, ${opacity.delay}ms`,\n      transitionDuration: `${duration}ms, ${opacity.duration}ms`,\n    };\n\n    const rippleHTML = this._renderer.createElement('div');\n\n    if (this.host.tagName.toLowerCase() === 'input') {\n      this._createWrapperSpan();\n    }\n\n    this._createHTMLRipple(this.host, rippleHTML, styles);\n    this._removeHTMLRipple(rippleHTML, duration);\n  }\n\n  private _createWrapperSpan(): void {\n    const parent = this._renderer.parentNode(this.host);\n    this._rippleInSpan = true;\n    if (parent.tagName.toLowerCase() === 'span' && parent.classList.contains('ripple-surface')) {\n      this._elementRef.nativeElement = parent;\n    } else {\n      const wrapper = this._renderer.createElement('span');\n\n      this._renderer.addClass(wrapper, 'ripple-surface');\n      this._renderer.addClass(wrapper, 'input-wrapper');\n\n      this._renderer.setStyle(wrapper, 'border', 0);\n\n      const shadow = getComputedStyle(this.host).boxShadow;\n      this._renderer.setStyle(wrapper, 'box-shadow', shadow);\n\n      // Put element as child\n      parent.replaceChild(wrapper, this.host);\n      wrapper.appendChild(this.host);\n      this._elementRef.nativeElement = wrapper;\n    }\n    this.host.focus();\n  }\n\n  _removeWrapperSpan() {\n    const child = this.host.firstChild;\n    this.host.replaceWith(child);\n    this._elementRef.nativeElement = child;\n    this.host.focus();\n    this._rippleInSpan = false;\n  }\n\n  private _createHTMLRipple(wrapper: HTMLElement, ripple: HTMLElement, styles: any): void {\n    Object.keys(styles).forEach((property) => (ripple.style[property] = styles[property]));\n    this._renderer.addClass(ripple, 'ripple-wave');\n\n    if (this.rippleColor !== '') {\n      this._removeOldColorClasses(wrapper);\n      this._addColor(ripple, wrapper);\n    }\n\n    this._toggleUnbound(wrapper);\n    this._appendRipple(ripple, wrapper);\n  }\n\n  private _removeHTMLRipple(ripple: HTMLElement, duration: number): void {\n    if (this._rippleTimer) {\n      clearTimeout(this._rippleTimer);\n      this._rippleTimer = null;\n    }\n    this._rippleTimer = setTimeout(() => {\n      if (ripple) {\n        ripple.remove();\n        this.host.querySelectorAll('.ripple-wave').forEach((rippleEl) => {\n          rippleEl.remove();\n        });\n        if (this._rippleInSpan && this.host.classList.contains('input-wrapper')) {\n          this._removeWrapperSpan();\n        }\n      }\n    }, duration);\n  }\n\n  _appendRipple(target: HTMLElement, parent: HTMLElement): void {\n    const FIX_ADD_RIPPLE_EFFECT = 50; // delay for active animations\n    this._renderer.appendChild(parent, target);\n    setTimeout(() => {\n      this._renderer.addClass(target, 'active');\n    }, FIX_ADD_RIPPLE_EFFECT);\n  }\n\n  _toggleUnbound(target: HTMLElement): void {\n    if (this.rippleUnbound) {\n      this._renderer.addClass(target, 'ripple-surface-unbound');\n    } else {\n      this._renderer.removeClass(target, 'ripple-surface-unbound');\n    }\n  }\n\n  _addColor(target: HTMLElement, parent: HTMLElement): void {\n    const isBootstrapColor = BOOTSTRAP_COLORS.find(\n      (color) => color === this.rippleColor.toLowerCase()\n    );\n\n    if (isBootstrapColor) {\n      this._renderer.addClass(parent, `${'ripple-surface'}-${this.rippleColor.toLowerCase()}`);\n    } else {\n      const rgbValue = colorToRGB(this.rippleColor).join(',');\n      const gradientImage = GRADIENT.split('{{color}}').join(`${rgbValue}`);\n      target.style.backgroundImage = `radial-gradient(circle, ${gradientImage})`;\n    }\n  }\n\n  _removeOldColorClasses(target: HTMLElement): void {\n    const REGEXP_CLASS_COLOR = new RegExp(`${'ripple-surface'}-[a-z]+`, 'gi');\n    const PARENT_CLASSS_COLOR = target.classList.value.match(REGEXP_CLASS_COLOR) || [];\n    PARENT_CLASSS_COLOR.forEach((className) => {\n      this._renderer.removeClass(target, className);\n    });\n  }\n\n  static ngAcceptInputType_rippleCentered: BooleanInput;\n  static ngAcceptInputType_rippleUnbound: BooleanInput;\n}\n","import { NgModule } from '@angular/core';\nimport { MdbRippleDirective } from './ripple.directive';\n\n@NgModule({\n  declarations: [MdbRippleDirective],\n  imports: [],\n  exports: [MdbRippleDirective],\n})\nexport class MdbRippleModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}